<% layout('layouts/boilerplate')%>
<div class="container">
  <div class="row">
    <div class="col-lg-12 order-2 order-lg-1 mb-0 mb-lg-3"><%- include('../partials/profileTabs') %></div>

    <div class="col-lg-12 order-1 order-lg-2">
      <!-- <h5 class="text-center mb-3">Manage Your watchlist</h5> -->

      <div class="row row-cols-1 row-cols-md-1 g-3 justify-content-center">
        <div class="col-md-12">
          <div class="p-3 bg-body rounded shadow-sm">
            <h6 class="border-bottom pb-2 mb-0">Saved pets</h6>

            <% if ( typeof pets !== 'undefined' && pets.length > 0) {%> <% for (let pet of pets) { %>

            <div class="d-flex text-body-secondary pt-3 border-bottom">
              <div class="mb-3 me-2">
                <img src="<%= pet.images[0].thumbnail%>" class="img-thumbnail" alt="" width="98px" height="98px" />
              </div>

              <div class="pb-3 mb-0 small lh-sm w-100">
                <div class="d-flex justify-content-between">
                  <strong class="text-gray-dark"><p><%=pet.petStatus%></p></strong>

                  <a href="#" class="text-danger m-0 p-0 removeWatchlistBtn" data-petid="<%= pet._id%>" style="text-decoration: none"><i class="bi bi-trash3"></i> Remove</a>
                </div>
                <span class="d-block"><a class="text-decoration-none" href="/pets/<%=pet._id%>">@<%=pet.species%></a></span>
              </div>
            </div>

            <% } %> <% } else { %>
            <p>List is empty</p>
            <% } %>
            <!-- <div class="d-block small text-end mt-3">
            <a href="#" id="deleteAllWatchlistBtn" class="text-danger m-0 p-0" style="text-decoration: none"><i class="bi bi-trash3"></i> Remove All</a>
          </div> -->
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const updateWatchlist = async (watchlistData) => {
    try {
      const response = await fetch(`/user/watchlist/${watchlistData.petId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        // Watchlist updated successfully

        console.log('Pet removed from watchlist successfully');
        location.reload(); // Refresh the page (to see the result of deleted item)
      } else {
        throw new Error('Failed to remove pet from watchlist');
      }
    } catch (error) {
      console.error(error);
      // Handle error and display appropriate message
    }
  };

  const removeWatchlistBtnAll = document.querySelectorAll('.removeWatchlistBtn');
  removeWatchlistBtnAll.forEach((btn) => {
    btn.addEventListener('click', async (e) => {
      const petId = e.currentTarget.getAttribute('data-petid');
      console.log(petId);

      // Prepare the watchlist data to send in the request body
      const watchlistData = {
        petId: petId,
      };

      await updateWatchlist(watchlistData);
    });
  });
</script>
<!-- <script>
  const deleteAllWatchlist = async () => {
    try {
      const response = await fetch('/user/watchlist/all', {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        // Watchlist deleted successfully
        console.log(response);
        console.log('All watchlist items deleted');
        location.reload(); // Refresh the page to reflect the changes
      } else {
        throw new Error('Failed to delete watchlist items');
      }
    } catch (error) {
      console.error(error);
      // Handle error and display appropriate message
    }
  };

  const deleteAllWatchlistBtn = document.getElementById('deleteAllWatchlistBtn');
  deleteAllWatchlistBtn.addEventListener('click', async () => {
    await deleteAllWatchlist();
  });
</script> -->
