<% layout('layouts/boilerplate')%>
<div class="container ps-0">
  <div class="row">
    <div class="col-3 p-0"><%- include('../partials/profileTabs') %></div>
    <div class="col-9">
      <!-- <h5 class="text-center mb-3">Your Pets</h5>
      <div class="row row-cols-1 row-cols-md-1 g-3 justify-content-center"></div> -->
      <div class="row row-cols-1 row-cols-md-1 g-3 justify-content-center">
        <div class="col-md-12">
          <div class="p-3 bg-body rounded shadow-sm">
            <h6 class="border-bottom pb-2 mb-0">Your pets</h6>

            <% if ( typeof userPets !== 'undefined' && userPets.length > 0) {%> <% for (let pet of userPets) { %>

            <div class="d-flex text-body-secondary border-bottom pt-3">
              <div class="mb-3 me-2">
                <img src="<%= pet.images[0].thumbnail%>" class="img-thumbnail" alt="" width="98px" height="98px" />
                <!-- <div class="form-check-inline">azaz</div> -->
                <!-- <label for="image-<=i%>">Delete?</label> -->
              </div>

              <div class="pb-3 mb-0 small lh-sm w-100">
                <div class="d-flex justify-content-between">
                  <strong class="text-gray-dark"><p><%=pet.petStatus%></p></strong>
                  <a href="#" class="text-danger m-0 p-0 removeWatchlistBtn" data-petid="<%= pet._id%>" style="text-decoration: none"><i class="bi bi-trash3"></i> Remove</a>
                  <!-- <button class="btn btn-danger removeWatchlistBtn" data-petid="<= pet._id%>">Remove</button> -->
                </div>
                <span class="d-block"><a class="text-decoration-none" href="/pets/<%=pet._id%>">@<%=pet.species%></a></span>
              </div>
            </div>

            <% } %> <% } else { %>
            <p>List is empty</p>
            <% } %>

            <!-- <div class="d-block small text-end mt-3">
              <a href="#" id="deleteAllUserPetsBtn" class="text-danger m-0 p-0" style="text-decoration: none" onclick="deleteAllUserServices(event)"><i class="bi bi-trash3"></i> Remove All</a>
            </div> -->
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- <script>
  const button = document.querySelector('.removeWatchlistBtn');
  const petId = button.dataset.petid;

  // Define the endpoint URL
  const endpointUrl = `/pets/${petId}`; // Replace '/pets' with the appropriate API endpoint for your backend

  // Create a fetch request with the DELETE method
  fetch(endpointUrl, {
    method: 'DELETE',
  })
    .then((response) => {
      if (!response.ok) {
        throw new Error('Network response was not ok');
      }
      return response.json(); // If you expect JSON data in the response, use response.json()
    })
    .then((data) => {
      // Handle the successful response data here
      console.log('Pet deleted successfully:', data);
      // You can perform any additional actions after the pet is deleted, like updating the UI, etc.
    })
    .catch((error) => {
      // Handle errors here
      console.error('Error deleting the pet:', error.message);
    });
</script> -->
<script>
  const updateWatchlist = async (petData) => {
    try {
      const response = await fetch(`/pets/${petData.petId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (response.ok) {
        // Watchlist updated successfully
        console.log('Pet removed from watchlist successfully');
        location.reload(); // Refresh the page (to see the updated watchlist)
      } else {
        throw new Error('Failed to remove pet from watchlist');
      }
    } catch (error) {
      console.error(error);
      // Handle error and display appropriate message
    }
  };

  const removeWatchlistBtnAll = document.querySelectorAll('.removeWatchlistBtn');
  removeWatchlistBtnAll.forEach((btn) => {
    btn.addEventListener('click', async (e) => {
      const petId = e.currentTarget.getAttribute('data-petid');
      console.log(petId);

      // Prepare the pet data to send in the request body
      const petData = {
        petId: petId,
      };

      await updateWatchlist(petData);
    });
  });
</script>
