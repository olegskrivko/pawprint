<% layout('layouts/boilerplate')%>

<div class="row d-flex flex-md-wrap">
  <section class="col-md-12 order-3 order-sm-3 order-md-1 mb-4">
    <div id="map" class="map" style="width: 100%; height: 400px"></div>
  </section>
  <section class="col-md-6 order-1 order-md-2">
    <!-- START UPPER CARD HEADER -->
    <div class="p-3 card d-flex flex-row justify-content-between" style="border-bottom-left-radius: 0; border-bottom-right-radius: 0">
      <div class="d-flex">
        <% if (pet.author && pet.author.avatar.length > 0) { %>
        <img src="<%= pet.author.avatar[0].url %>" alt="mdo" width="32" height="32" class="rounded-circle me-2" />
        <% } else { %>
        <img src="/images/icons/user.png" alt="mdo" width="32" height="32" class="rounded-circle me-2" />
        <% } %>
        <div class="d-flex flex-column">
          <div class="d-flex">
            <% if (pet.author && pet.author.firstName && pet.author.lastName) { %>
            <h5 class="card-title small p-0 m-0">
              <%=pet.author.firstName%> <%=pet.author.lastName%> <% if (pet.author && pet.author.username) { %> <% if (pet.author.isVerified) { %>
              <span class="text-primary"><i class="bi bi-patch-check-fill"></i></span>

              <% } %> <% } %>
            </h5>

            <% } else { %>
            <span class="text-danger">Unknown</span>
            <% } %>
          </div>

          <p class="text-muted small pb-0 mb-0">
            <% if (pet.author && pet.author.username) { %> @<%= pet.author.username %> <% if (pet.author.isVerified) { %> <% } else { %> <% } %> <% } else { %>
            <span class="text-danger">Unknown User</span>
            <% } %>
          </p>
        </div>
      </div>

      <div class="d-flex flex-column justify-content-center">
        <a type="" style="cursor: pointer" class="text-secondary" data-bs-toggle="dropdown"><i class="bi bi-three-dots-vertical"></i></a>

        <ul class="dropdown-menu dropdown-menu-end mx-0 shadow w-220px" data-bs-theme="light">
          <li>
            <a id="generatePdf" class="dropdown-item dropdown-item-danger d-flex gap-2 align-items-center" href="#"><i class="bi bi-file-earmark-arrow-down"></i> <%= petsShowPage.buttons.download %></a>
            <!-- <a id="downloadBtn" class="dropdown-item dropdown-item-danger d-flex gap-2 align-items-center" href="#"><i class="bi bi-file-earmark-arrow-down"></i> <= petsShowPage.buttons.download %> </a> -->
          </li>
          <li>
            <a id="copyBtn" class="dropdown-item dropdown-item-danger d-flex gap-2 align-items-center" href="#"><i class="bi bi-files"></i> <%= petsShowPage.buttons.copyLink %> </a>
          </li>
          <!-- <li>
            <a class="dropdown-item dropdown-item-danger d-flex gap-2 align-items-center" id="reportpetidBtn" data-reportpetid="<%= pet._id%>" href=""><i class="bi bi-exclamation-square"></i> Report post </a>
          </li> -->

          <!-- < if (currentUser && pet.author && currentUser._id && pet.author.equals(currentUser._id)) { %>
          <li><hr class="dropdown-divider" /></li>
          <li>
            <a href="#" class="dropdown-item dropdown-item-danger d-flex gap-2 align-items-center" onclick="location.href='/pets/<%= pet._id%>/edit'"><i class="bi bi-pencil"></i> <%= petsShowPage.buttons.edit %></a>
          </li>

          < } %> -->

          <% if (currentUser && pet.author && currentUser._id && pet.author.equals(currentUser._id)) { %>
          <li>
            <form class="d-inline" action="/pets/<%=pet.id%>?_method=DELETE" method="POST" onsubmit="return confirm('Are you sure you want to delete this pet?');">
              <button class="dropdown-item text-danger dropdown-item-danger d-flex gap-2 align-items-center"><i class="bi bi-trash3"></i> <%= petsShowPage.buttons.delete %></button>
            </form>
          </li>
          <% } %>
        </ul>
      </div>
    </div>
    <!-- END UPPER CARD HEADER -->
    <div id="petCarousel" class="carousel slide" data-bs-ride="carousel">
      <div class="carousel-inner">
        <% if (pet.images.length > 0) {%> <% pet.images.forEach((img, i) => { %>
        <div class="carousel-item <%= i === 0 ? 'active' : ''%>">
          <img src="<%=img.url%>" class="d-block w-100 petImgSrc" alt="" />
        </div>

        <% }) %> <% } else { %>
        <div class="carousel-item active">
          <img src="/images/placeholder.jpg" class="d-block w-100" alt="" />
        </div>
        <% } %>
      </div>
      <% if (pet.images.length > 1) {%>
      <button class="carousel-control-prev" type="button" data-bs-target="#petCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
      </button>

      <button class="carousel-control-next" type="button" data-bs-target="#petCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
      </button>
    </div>

    <% } %>
    <div class="card p-3 d-flex flex-row justify-content-between" style="border-radius: 0">
      <div class="d-flex">
        <div class="me-4">
          <a class="text-secondary" style="text-decoration: none; cursor: default"><i class="bi bi-eye"></i> <%= pet.views %> </a>
        </div>
        <div class="dropdown-center me-4">
          <a class="text-secondary" type="button" data-bs-toggle="dropdown"><i class="bi bi-share"></i></a>
          <ul class="dropdown-menu">
            <li>
              <a class="dropdown-item" onclick="shareOnFacebook()" href="#"><i class="bi bi-facebook"></i> Facebook</a>
            </li>
            <li>
              <a class="dropdown-item" onclick="shareOnLinkedIn()" href="#"><i class="bi bi-linkedin"></i> LinkedIn</a>
            </li>
            <li>
              <a class="dropdown-item" onclick="shareOnWhatsApp()" href="#"><i class="bi bi-whatsapp"></i> WhatsApp</a>
            </li>
            <li>
              <a class="dropdown-item" onclick="shareOnTwitter()" href="#"><i class="bi bi-twitter"></i> Twitter</a>
            </li>
            <li>
              <a class="dropdown-item" onclick="shareOnMessenger()" href="#"><i class="bi bi-messenger"></i> Messenger</a>
            </li>
          </ul>
        </div>
      </div>
      <style>
        .carousel-indicator {
          width: 10px !important;
          height: 10px !important;
          margin: 0 5px !important;
          border-radius: 50% !important;
          border: none !important;
          transition: opacity 0.15s ease !important;
        }

        .carousel-indicator.active {
          width: 12px !important;
          height: 12px !important;
          opacity: 0.8 !important;
          background-color: #212529 !important;
        }
      </style>
      <div class="d-flex flex-column align-items-center justify-content-center" style="position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%)">
        <% if (pet.images.length > 1) { %>
        <div class="carousel-indicators d-flex align-items-center justify-content-center" style="position: relative; top: 0; bottom: 0; margin-top: 0; margin-bottom: 0">
          <% pet.images.forEach((img, i) => { %>
          <a data-bs-target="#petCarousel" data-bs-slide-to="<%= i %>" class="bg-dark carousel-indicator <%= i === 0 ? 'active' : '' %>" onclick="updateActiveIndicator(this)"></a>
          <% }) %>
        </div>

        <% } %>
      </div>
      <div class="d-flex justify-content-center">
        <a class="text-secondary" id="saveWatchlistBtn" data-petid="<%= pet._id%>" style="cursor: pointer">
          <% if (currentUser && pet._id && currentUser.watchlist.length > 0 && currentUser.watchlist.includes(pet._id)) { %>
          <i class="bi bi-bookmark-heart-fill" style="pointer-events: none"></i>
          <% } else { %>
          <i class="bi bi-bookmark-heart" style="pointer-events: none"></i>
          <% } %></a
        >
      </div>

      <!-- <div>
        <button onclick="location.href='/pets/<= pet._id%>/download-pdf'" class="btn btn-sm btn-outline-secondary my-2 me-2 text-light">
          <i class="bi bi-download"></i>
          <span class="small">Download</span>
        </button>
      </div> -->

      <!-- <div>
        <button class="btn btn-sm btn-outline-info my-2 me-2" type="button" data-bs-toggle="collapse" data-bs-target="#collapseWidthExample" aria-expanded="false" aria-controls="collapseWidthExample"><i class="bi bi-share"></i> <span class="small">Share</span></button>
      </div> -->
      <!-- <% if (currentUser && pet.author && currentUser._id && pet.author.equals(currentUser._id)) { %>
      <div>
        <button class="btn btn-sm btn-outline-info" onclick="location.href='/pets/<%= pet._id%>/edit'"><i class="bi bi-pencil"></i> <span class="small">Edit</span></button>
      </div>
      <form class="d-inline" action="/pets/<%=pet.id%>?_method=DELETE" method="POST" onsubmit="return confirm('Are you sure you want to delete this pet?');">
        <button class="btn btn-sm btn-outline-danger"><i class="bi-trash3"></i> <span class="small">Delete</span></button>
      </form>

      <% } %> -->
    </div>
    <div class="col-md-12">
      <div class="card mb-3" style="border-radius: 0">
        <div class="card-body py-0">
          <ul class="list-group list-group-flush show-pet-list">
            <!-- <li class="list-group-item">
          <b>Last seen in:</b> <span id="pet-location"> <= pet.location %></span>
        </li> -->

            <!-- <li class="list-group-item" style="text-transform: capitalize">
              <b>
                < if (pet.petStatus === "Found") { %> Finder's Name: < } else {
                %> Owner's Name: <} %></b
              >
              <= pet.author.username %>
            </li> -->
            <!-- <li class="list-group-item" style="text-transform: capitalize">
              <b>Pet's Name:</b> <= pet.title %>
            </li> -->
            <li class="list-group-item"><i class="bi bi-question-diamond"></i> <b><%= petsShowPage.titles.petStatus %></b> <span id="pet-status"> <%= pet.petStatus %></span></li>
            <li class="list-group-item"><i class="bi bi-diamond-half"></i> <b><%= petsShowPage.titles.petSpecies %></b><span id="pet-species"> <%= pet.species %></span></li>
            <li class="list-group-item"><i class="bi bi-x-diamond-fill"></i> <b><%= petsShowPage.titles.petBreed %></b><span id="pet-breed"> <%= pet.breed %></span></li>
            <li class="list-group-item"><i class="bi bi-grid-3x3-gap"></i> <b><%= petsShowPage.titles.petCoatPattern %></b><span id="pet-pattern"> <%= pet.pattern %></span></li>
            <li class="list-group-item"><i class="bi bi-gender-ambiguous"></i> <b><%= petsShowPage.titles.petGender %></b><span id="pet-gender"> <%= pet.gender %></span></li>

            <li class="list-group-item"><i class="bi bi-palette"></i> <b><%= petsShowPage.titles.petColor1 %></b> <%= pet.color[0] %></li>
            <% if (pet.color.length > 1) {%>
            <li class="list-group-item">
              <i class="bi bi-palette"></i> <b> <% if (pet.pattern === "Spotted") { %> <%= petsShowPage.titles.spotColor %> <% } else if (pet.pattern === "Striped") { %> <%= petsShowPage.titles.stripeColor %> <% } else { %> <%= petsShowPage.titles.petColor2 %> <% } %> </b>
              <%= pet.color[1] %>
            </li>
            <% } %> <% if (pet.color.length > 2) {%>
            <li class="list-group-item"><i class="bi bi-palette"></i> <b><%= petsShowPage.titles.petColor3 %></b> <%= pet.color[2] %></li>
            <% } %>

            <li class="list-group-item"><i class="bi bi-calendar3"></i> <b><%= petsShowPage.titles.petLastSeen %></b> <%= lostDateInWords %></li>
            <li class="list-group-item"><i class="bi bi-calendar2-heart"></i> <b><%= petsShowPage.titles.petAge %></b> <%= pet.age %></li>
            <li class="list-group-item"><i class="bi bi-wind"></i> <b><%= petsShowPage.titles.petCoatType %></b> <%= pet.coat %></li>
            <li class="list-group-item"><i class="bi bi-arrows-angle-expand"></i> <b><%= petsShowPage.titles.petSize %></b> <%= pet.size %></li>

            <li class="list-group-item d-none"><b>Lat: </b><span class="pet-latitude"><%=pet.latitude%></span><b>Lng: </b><span class="pet-longitude"><%=pet.longitude%></span></li>
            <li class="list-group-item">
              <i class="bi bi-fingerprint"></i> <b><%= petsShowPage.titles.petIdentifier %></b> <% if (pet.identifier !== undefined && pet.identifier !== '' && pet.identifier !== null ) { %> <% let identifierStr = pet.identifier.toString(); %> <%= identifierStr.substring(0, identifierStr.length - 4) + '****' %> <% } else { %>
              <!-- Handle the case when pet.identifier is undefined or empty -->
              <!-- You can display a placeholder or a message -->
              <!-- Unknown -->
              <% } %>
            </li>
            <li class="list-group-item">
              <p class="card-text">
                <i class="bi bi-chat-square-text"></i> <b><%= petsShowPage.titles.petDescription %></b>
                <span id="pet-description"> <%= pet.description %></span>
              </p>
            </li>
          </ul>
        </div>
        <div class="d-flex flex-column">
          <div class="card-footer small text-muted"><%=petsShowPage.description.added%> <%=createDateInWords%></div>
          <div class="card-footer small text-muted"><%=petsShowPage.description.updated%> <%=updateDateInWords%></div>
        </div>
      </div>
    </div>
  </section>

  <!-- comment section -->
  <section class="col-md-6 order-4 order-md-4" id="comment-section">
    <div>
      <% if (currentUser) { %>
      <div class="card p-3">
        <form action="/pets/<%=pet._id%>/comments" method="POST" class="validated-form d-flex" novalidate>
          <div>
            <% if (currentUser.avatar && currentUser.avatar.length > 0) { %>
            <img src="<%= currentUser.avatar[0].url %>" alt="mdo" width="32" height="32" class="rounded-circle me-2" />
            <% } else { %>
            <img src="/images/icons/user.png" alt="mdo" width="32" height="32" class="rounded-circle me-2" />
            <% } %>
          </div>
          <div class="form-floating flex-grow-1">
            <div>
              <input class="d-none" type="text" name="comment[lng]" id="commentlng" value="" />
              <input class="d-none" type="text" name="comment[lat]" id="commentlat" value="" />
            </div>
            <textarea class="form-control" name="comment[body]" required placeholder="Add a comment..." id="body" style="height: 80px; border-radius: 3px; resize: none; width: 100%"></textarea>
            <label for="body" class="small"><%= petsShowPage.placeholder.addComment %></label>
            <div class="valid-feedback">Looks good!</div>

            <div class="mt-1">
              <a href="#" class="text-secondary" onclick="event.preventDefault(); this.closest('form').submit();" style="text-decoration: none"><i class="bi bi-send-fill"></i> <small><%= petsShowPage.buttons.send %></small></a>
              <a href="#" class="text-secondary ms-4" id="togglePointBtn" style="text-decoration: none"><i class="bi bi-geo-alt-fill" style="pointer-events: none"></i><small class="geo-loc-btn-add"><%= petsShowPage.buttons.addLocation %></small><small class="geo-loc-btn-remove"><%= petsShowPage.buttons.removeLocation %></small></a>
            </div>
          </div>
        </form>
      </div>
      <% } %> <% if (!currentUser) {%>
      <div class="card p-3">
        <form action="/pets/<%=pet._id%>/comments" method="POST" class="validated-form d-flex" novalidate>
          <div>
            <img src="/images/icons/user.png" alt="mdo" width="32" height="32" class="rounded-circle me-2" />
          </div>
          <div class="form-floating flex-grow-1">
            <textarea class="form-control" name="comment[body]" required placeholder="Add a comment..." id="body" style="height: 80px; border-radius: 3px; resize: none; width: 100%"></textarea>
            <label for="body" class="small"><%= petsShowPage.placeholder.addComment %></label>
            <div class="valid-feedback">Looks good!</div>
            <div class="mt-1">
              <a href="#" class="text-secondary" onClick="location.href='/auth/login'" style="text-decoration: none"><i class="bi bi-send-fill"></i> <small><%= petsShowPage.buttons.send %></small></a>
              <a href="#" class="text-secondary ms-4" onClick="location.href='/auth/login'" style="text-decoration: none"><i class="bi bi-geo-alt-fill"></i><small class="geo-loc-btn-add"><%= petsShowPage.buttons.addLocation %></small><small class="geo-loc-btn-remove"><%= petsShowPage.buttons.removeLocation %></small></a>
            </div>
          </div>
        </form>
      </div>

      <% } %>

      <div class="mt-5">
        <% if (pet.comments.length > 0) { %> <% for (let comment of pet.comments) { %>
        <div class="card mt-3">
          <div class="card-body d-flex flex-column">
            <div class="d-flex me-2 mb-2">
              <% if (comment.author && comment.author.avatar && comment.author.avatar.length > 0) { %>
              <img src="<%= comment.author.avatar[0].url %>" alt="mdo" width="32" height="32" class="rounded-circle me-2" />
              <% } else { %>
              <img src="/images/icons/user.png" alt="mdo" width="32" height="32" class="rounded-circle me-2" />
              <% } %>
              <div class="d-flex flex-column">
                <div class="d-flex">
                  <% if (comment.author && comment.author.firstName && comment.author.lastName) { %>
                  <h5 class="card-title small p-0 m-0">
                    <%=comment.author.firstName%> <%=comment.author.lastName%> <% if (comment.author && comment.author.username) { %> <% if (comment.author.isVerified) { %>
                    <span class="text-primary"><i class="bi bi-patch-check-fill"></i></span>

                    <% } %> <% } %>
                  </h5>

                  <% } else { %>
                  <span class="text-danger">Unknown</span>
                  <% } %>
                  <!-- test-->
                  <!-- < if (pet.author && comment.author && pet.author.email && comment.author.email && pet.author.email.toLowerCase() === comment.author.email.toLowerCase()) { %>
                  <h6 class="card-text text-muted small ms-1"><i><= petsShowPage.description.author %></i></h6>
                  < } %> -->
                  <!-- test-->
                  <h6 class="card-text text-muted small ms-1"><i class="bi bi-dot"></i> <%= comment.formattedCreatedAt %></h6>
                </div>

                <p class="text-muted small">
                  <% if (comment.author && comment.author.username) { %> @<%= comment.author.username %> <% if (comment.author.isVerified) { %> <% } else { %> <% } %> <% } else { %>
                  <span class="text-danger">Unknown User</span>
                  <% } %>
                </p>
              </div>
            </div>
            <div>
              <p class="card-text" style="text-align: justify"><small><%= comment.body %></small></p>
              <div class="d-flex">
                <div class="">
                  <% if (comment.location.coordinates) { %>
                  <a class="m-0 p-0 me-3 petButtonZoom" id="<%=comment.location.coordinates %>" data-petcommentcoords="<%=comment.location.coordinates %>" href="" style="text-decoration: none"><i class="bi bi-geo-alt-fill small" style="text-decoration: none; pointer-events: none"></i> <span class="small" style="text-decoration: none; pointer-events: none"><%= petsShowPage.buttons.show %></span></a>
                  <!-- <p class="m-0 p-0 me-3 petButtonZoom" style="pointer-events: none"><i class="bi bi-geo-alt-fill small" style="pointer-events: none"></i> <span class="small" style="pointer-events: none">Show</span></p> -->
                  <% } %>
                </div>

                <% if (comment.author && currentUser && comment.author.equals(currentUser._id)) { %>
                <form class="m-0 p-0" action="/pets/<%= pet._id %>/comments/<%= comment._id %>?_method=DELETE" method="POST">
                  <a href="#" class="text-danger m-0 p-0" style="text-decoration: none" onclick="deleteComment(event)"><i class="bi bi-trash3 small"></i> <span class="small"><%= petsShowPage.buttons.delete %></span></a>
                </form>
                <% } %>
              </div>
            </div>
          </div>
        </div>
        <% } %> <% } else { %>

        <p class="text-muted small ms-5"><%= petsShowPage.description.noCommentsYet %></p>

        <% } %>
      </div>
    </div>
  </section>

  <!--- row --->
</div>
<!-- DOWNLOAD PDF CLIENT SIDE -->

<!-- <script>
  const saveWatchlistBtn = document.querySelector("#saveWatchlistBtn");
  saveWatchlistBtn.addEventListener("click", async (e) => {

    const petId = e.currentTarget.getAttribute("data-petid");
    console.log(petId);

  })

</script> -->
<div id="qrcode" class="d-none"></div>
<!-- <button id="generatePdf">Generate PDF</button> -->

<script>
  // Get the current URL
  const currentURL = window.location.href;

  // Extract the dynamic part from the current URL
  const dynamicPart = currentURL.split('/').pop();

  // Create the complete URL
  //const completeURL = `https://www.pawclix.com/pets/${dynamicPart}`;
  const completeURL = `https://pawclix.cyclic.app/pets/${dynamicPart}`;

  // Detect the document language
  const documentLanguage = document.documentElement.lang;
  // Create a new QRCode instance
  const qrcode = new QRCode(document.getElementById('qrcode'), {
    text: completeURL, // Use the current URL
    width: 128,
    height: 128,
  });

  // Optional: You can style the QR code using CSS
  document.getElementById('qrcode').style.margin = '20px auto'; // Center the QR code

  let petStatusValue = document.querySelector('#pet-status').textContent;
  let petImgSrcValue = document.querySelector('.petImgSrc').getAttribute('src');
  let petSpeciesValue = document.querySelector('#pet-species').textContent;
  let petBreedValue = document.querySelector('#pet-breed').textContent;
  let petGenderValue = document.querySelector('#pet-gender').textContent;

  //let petCoatPatternValue = document.querySelector('#pet-pattern').textContent;
  // let petFirstColorValue = document.querySelector('#pet-color1').textContent;
  // let petSecondColorValue = document.querySelector('#pet-color2').textContent;
  // let petThirdColorValue = document.querySelector('#pet-color3').textContent;
  // let petLastSeenValue = document.querySelector('#pet-last-seen').textContent;
  // let petAgeValue = document.querySelector('#pet-age').textContent;
  // let petCoatLengthValue = document.querySelector('#pet-coat-length').textContent;
  //let petSizeValue = document.querySelector('#pet-size').textContent;
  //let petIDValue = document.querySelector('#pet-identifier').textContent;
  //let petDescriptionValue = document.querySelector('#pet-description').textContent;
  // Fetch the image and convert it to Base64
  fetch(`${petImgSrcValue}`)
    .then((response) => response.blob())
    .then((blob) => {
      const reader = new FileReader();
      reader.onload = () => {
        const imageData = reader.result.split(',')[1]; // Extract the Base64 data

        // Generate PDF

        // Define templates for different languages
        const englishTemplate = {
          content: [
            {
              layout: 'noBorders', // Remove borders around the shape
              table: {
                widths: ['*'], // Set width to 100% of available space
                body: [
                  [
                    {
                      //fillColor: 'red', // Set the fill color to red
                      text: `${petStatusValue} ${petSpeciesValue}!`,
                      style: 'header',
                    },
                  ],
                ],
              },
              margin: [0, 10], // Add top and bottom margin (padding)
              alignment: 'center', // Center the shape
            },
            {
              image: `data:image/jpeg;base64,${imageData}`, // Base64-encoded image data
              width: 350,
              //height: 400, it will be automatically adjusted
              alignment: 'center', // Align the image to the center
            },
            { text: `Pet gender: ${petGenderValue}`, style: 'paragraph' },
            { text: `Breed: ${petBreedValue}`, style: 'paragraph' },
            { text: `Coat pattern:`, style: 'paragraph' },
            { text: `Coat length:`, style: 'paragraph' },
            { text: `Primary color: Secondary color: Tertiary color:`, style: 'paragraph' },
            { text: `Pet size:`, style: 'paragraph' },
            { text: `Age:`, style: 'paragraph' },
            { text: `Last seen:`, style: 'paragraph' },
            { text: `Brief description:`, style: 'paragraph' },
            {
              image: document.getElementById('qrcode').querySelector('img').src, // Include QR code image
              width: 128,
              height: 128,
              alignment: 'center',
            },
            {
              text: 'Generated using www.PawClix.com', // Your watermark or credit text
              fontSize: 10,
              alignment: 'center',
              margin: [0, 20, 0, 0], // Add margin to create space between content and credit
            },
          ],
          styles: {
            centeredHeader: { fontSize: 18, alignment: 'center', bold: true, margin: [0, 0, 0, 10] },
            header: { fontSize: 18, bold: true, margin: [0, 0, 0, 10] },
            paragraph: { fontSize: 12, margin: [0, 10, 0, 0] },
          },
        };

        const latvianTemplate = {
          content: [
            {
              layout: 'noBorders', // Remove borders around the shape
              table: {
                widths: ['*'], // Set width to 100% of available space
                body: [
                  [
                    {
                      //fillColor: 'red', // Set the fill color to red
                      text: `${petStatusValue} ${petSpeciesValue}!`,
                      style: 'header',
                    },
                  ],
                ],
              },
              margin: [0, 10], // Add top and bottom margin (padding)
              alignment: 'center', // Center the shape
            },
            //{ text: 'Hello, this is an HTML to PDF example', style: 'header' },
            {
              image: `data:image/jpeg;base64,${imageData}`, // Base64-encoded image data
              width: 350,
              //height: 400, it will be automatically adjusted
              alignment: 'center', // Align the image to the center
            },
            { text: `Dzīvnieka dzimums: ${petGenderValue}`, style: 'paragraph' },
            { text: `Šķirne: ${petBreedValue}`, style: 'paragraph' },
            { text: `Kažoka raksts:`, style: 'paragraph' },
            { text: `Spalvas garums:`, style: 'paragraph' },
            { text: `Primārā krāsa: Sekundārā krāsa: Trešā krāsa:`, style: 'paragraph' },
            { text: `Dzīvnieka izmērs:`, style: 'paragraph' },
            { text: `Vecums:`, style: 'paragraph' },
            { text: `Pēdējo reizi redzēts:`, style: 'paragraph' },
            { text: `Īss apraksts:`, style: 'paragraph' },
            {
              image: document.getElementById('qrcode').querySelector('img').src, // Include QR code image
              width: 128,
              height: 128,
              alignment: 'center',
            },
            {
              text: 'Izveidots www.PawClix.com', // Your watermark or credit text
              fontSize: 10,
              alignment: 'center',
              margin: [0, 20, 0, 0], // Add margin to create space between content and credit
            },
          ],
          styles: {
            centeredHeader: { fontSize: 18, alignment: 'center', bold: true, margin: [0, 0, 0, 10] },
            header: { fontSize: 18, bold: true, margin: [0, 0, 0, 10] },
            paragraph: { fontSize: 12, margin: [0, 10, 0, 0] },
          },
        };

        const russianTemplate = {
          content: [
            {
              layout: 'noBorders', // Remove borders around the shape
              table: {
                widths: ['*'], // Set width to 100% of available space
                body: [
                  [
                    {
                      //fillColor: 'red', // Set the fill color to red
                      text: `${petStatusValue} ${petSpeciesValue}!`,
                      style: 'header',
                    },
                  ],
                ],
              },
              margin: [0, 10], // Add top and bottom margin (padding)
              alignment: 'center', // Center the shape
            },
            {
              image: `data:image/jpeg;base64,${imageData}`, // Base64-encoded image data
              width: 350,
              //height: 400, it will be automatically adjusted
              alignment: 'center', // Align the image to the center
            },
            { text: `Пол животного: ${petGenderValue}`, style: 'paragraph' },
            { text: `Порода: ${petBreedValue}`, style: 'paragraph' },
            { text: `Тип меха:`, style: 'paragraph' },
            { text: `Длина шерсти:`, style: 'paragraph' },
            { text: `Основной цвет: Вторичный цвет: Третичный цвет:`, style: 'paragraph' },
            { text: `Размер животного:`, style: 'paragraph' },
            { text: `Возраст:`, style: 'paragraph' },
            { text: `Последний раз видели:`, style: 'paragraph' },
            { text: `Краткое описание:`, style: 'paragraph' },
            {
              image: document.getElementById('qrcode').querySelector('img').src, // Include QR code image
              width: 128,
              height: 128,
              alignment: 'center',
            },
            {
              text: 'Сгенерирован с помощью www.PawClix.com', // Your watermark or credit text
              fontSize: 10,
              alignment: 'center',
              margin: [0, 20, 0, 0], // Add margin to create space between content and credit
            },
          ],
          styles: {
            centeredHeader: { fontSize: 18, alignment: 'center', bold: true, margin: [0, 0, 0, 10] },
            header: { fontSize: 18, bold: true, margin: [0, 0, 0, 10] },
            paragraph: { fontSize: 12, margin: [0, 10, 0, 0] },
          },
        };

        // Select the appropriate template based on the language
        const documentLanguage = document.documentElement.lang;
        let selectedTemplate;
        if (documentLanguage === 'en') {
          selectedTemplate = englishTemplate;
        } else if (documentLanguage === 'lv') {
          selectedTemplate = latvianTemplate;
        } else if (documentLanguage === 'ru') {
          selectedTemplate = russianTemplate;
        }
        // Add more conditions for other languages if needed
        // Generate the PDF using the selected template
        const pdfDoc = pdfMake.createPdf(selectedTemplate);
        document.getElementById('generatePdf').addEventListener('click', function () {
          pdfDoc.download('pet.pdf');
        });
      };
      reader.readAsDataURL(blob);
    });
</script>

<script>
  const indicators = document.querySelectorAll('.carousel-indicator');
  const carousel = document.querySelector('#petCarousel');

  carousel.addEventListener('slid.bs.carousel', function () {
    const activeSlide = carousel.querySelector('.active.carousel-item');
    const activeIndex = Array.from(activeSlide.parentNode.children).indexOf(activeSlide);

    indicators.forEach((ind) => {
      ind.classList.remove('active');
    });
    indicators[activeIndex].classList.add('active');
  });
</script>

<script>
  function deleteComment(event) {
    event.preventDefault(); // Prevent the default anchor tag behavior

    const confirmed = confirm('Are you sure you want to delete this comment?'); // Display a confirmation dialog

    if (confirmed) {
      event.target.closest('form').submit(); // Find the closest form and submit it
    }
  }
</script>
<!-- ADD to LIST -->
<script>
  const saveWatchlist = async (watchlistData) => {
    try {
      const response = await fetch('/user/watchlist', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(watchlistData),
      });

      if (response.ok) {
        // Watchlist updated successfully
        console.log('Watchlist updated successfully');
      } else {
        throw new Error('Failed to update watchlist');
      }
    } catch (error) {
      console.error(error);
      // Handle error and display appropriate message
    }
  };

  const saveWatchlistBtn = document.querySelector('#saveWatchlistBtn');

  saveWatchlistBtn.addEventListener('click', async (e) => {
    // Retrieve the selected pets from the UI
    const petId = e.currentTarget.getAttribute('data-petid');
    const selectedPets = petId; /* Code to retrieve the selected pets from the UI */

    // Prepare the watchlist data to send in the request body
    const watchlistData = {
      pets: selectedPets,
    };
    console.log('watchlistData: ', watchlistData);

    await saveWatchlist(watchlistData);
    location.reload();
  });
</script>
<!-- <script>
  //const reportPetId = e.currentTarget.getAttribute('data-reportpetid');
  const reporturl = window.location.href;
  const reportparts = reporturl.split('/');

  const reportpetId = reportparts[reportparts.length - 1];
  const selectedReportpetId = reportpetId; /* Code to retrieve the selected pets from the UI */
  console.log(selectedReportpetId);

  reportpetidBtn.addEventListener('click', async (e) => {
    e.preventDefault();

    fetch(`/pets/${selectedReportpetId}/reportpost`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ selectedReportpetId }),
    })
      .then((response) => {
        if (response.ok) {
          console.log('Report sent successfully');
          // Handle success, such as showing a success message
        } else {
          console.error('Failed to send report');
          // Handle error, such as showing an error message
        }
      })
      .catch((error) => {
        console.error('Error occurred while sending report:', error);
        // Handle error, such as showing an error message
      });
  });
</script> -->

<script>
  // Function to copy the current URL to the clipboard
  function copyURLToClipboard() {
    const currentURL = window.location.href;

    // Create a temporary textarea element to hold the URL
    const textarea = document.createElement('textarea');
    textarea.value = currentURL;

    // Append the textarea to the document
    document.body.appendChild(textarea);

    // Select the URL in the textarea
    textarea.select();

    // Copy the selected URL to the clipboard
    document.execCommand('copy');

    // Remove the textarea from the document
    document.body.removeChild(textarea);
  }

  // Event listener for the button click
  const copyBtn = document.getElementById('copyBtn');
  copyBtn.addEventListener('click', copyURLToClipboard);
</script>
<script>
  const url = window.location.href;
  const parts = url.split('/');
  const petId = parts[parts.length - 1];
  //let testpetid = '64a49110d4494b93b4a96d8e';

  const downloadBtn = document.getElementById('downloadBtn');

  downloadBtn.addEventListener('click', () => {
    fetch(`/pets/${petId}/downloadpdf`, {
      method: 'GET',
      headers: {
        'Content-Type': 'application/pdf',
      },
    })
      .then((response) => response.blob())
      .then((blob) => {
        console.log(blob);
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'Document.pdf';
        a.click();
      })
      .catch((error) => {
        console.error('Error:', error);
      });
  });
</script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.9.0/css/all.min.css" integrity="sha512-q3eWabyZPc1XTCmF+8/LuE1ozpg5xxn7iO89yfSOd5/oKvyqLngoNGsx8jq92Y8eXJ/IRxQbEC+FGSYxtk2oiw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script>
  const TOMTOMTOKEN = "<%-process.env.TOMTOM_API_KEY%>";

  const pet = {features: <%-JSON.stringify(pet)%>}
  const petcomments = {features: <%-JSON.stringify(pet.comments)%>}
</script>
<script src="/javascripts/showPetShareButtons.js"></script>
<script src="/javascripts/showPageMap.js"></script>
