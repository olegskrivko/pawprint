<% layout('layouts/boilerplate')%>
<h1 class="text-center mb-4">Report Pet</h1>
<form action="/pets" method="POST" novalidate class="row g-3" enctype="multipart/form-data" id="pet-form">
  <!-- Pet Status -->
  <div class="col-md-4">
    <label class="form-label" for="petStatus"><%= petsLocale.filterPetStatus %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-question-diamond"></i>
      </span>
      <select class="form-select" id="petStatus" required name="pet[petStatus]">
        <% statusOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>

  <!-- Pet Species -->
  <div class="col-md-4">
    <label class="form-label" for="species"><%= petsLocale.filterSpecies %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-diamond-half"></i>
      </span>
      <select class="form-select" id="species" name="pet[species]" required form="pet-form">
        <% speciesOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>

  <!-- Pet Gender -->
  <div class="col-md-4">
    <label class="form-label" for="gender"><%= petsLocale.filterPetGender %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-gender-ambiguous"></i>
      </span>

      <select class="form-select" id="gender" name="pet[gender]">
        <% genderOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>

  <!-- Age -->
  <div class="col-md-4">
    <label class="form-label" for="age"><%= petsLocale.filterPetAge %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-calendar2-heart"></i>
      </span>
      <select class="form-select" id="age" name="pet[age]">
        <% ageOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>

  <!-- Pet identifier -->
  <div class="col-md-4">
    <label class="form-label" for="identifier"><%= petsLocale.filterIdentifier %></label>
    <div class="input-group">
      <span class="input-group-text"><i class="bi bi-fingerprint"></i></span>
      <input type="number" class="form-control identifier" id="identifier" min="0" name="pet[identifier]" value="" autocomplete="off" />
    </div>
  </div>

  <!-- Lost Date -->
  <div class="col-md-4">
    <label class="form-label" for="lostdate"><%= petsLocale.filterLostDate %></label>
    <div class="input-group">
      <span class="input-group-text"><i class="bi bi-calendar3"></i></span>
      <input type="date" class="form-control lostdate" id="lostdate" name="pet[lostdate]" min="2023-01-01" value="" required />
    </div>
  </div>

  <!-- map -->
  <div id="map" style="max-width: 100%; height: 300px; background-color: #808080"></div>

  <div class="col-md-2 col-sm-3 col-6 mb-3">
    <label class="form-label me-1" for="latitude">Latitude</label>
    <input id="latitude" class="form-control text-muted" type="number" aria-label="latitude" aria-describedby="latitude-label" name="pet[latitude]" />
    <div class="valid-feedback">Looks good!</div>
  </div>

  <div class="col-md-2 col-sm-3 col-6 mb-3">
    <label class="form-label me-1" for="longitude">Longitude</label>
    <input id="longitude" class="form-control text-muted" type="number" aria-label="longitude" aria-describedby="longitude-label" name="pet[longitude]" />
    <div class="valid-feedback">Looks good!</div>
  </div>

  <!-- Coat type -->
  <div class="col-md-4">
    <label class="form-label" for="coat"><%= petsLocale.filterCoatType %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-wind"></i>
      </span>
      <select class="form-select" id="coat" name="pet[coat]">
        <% coatOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>

  <!-- Pet size -->
  <div class="col-md-4">
    <label class="form-label" for="size"><%= petsLocale.filterPetSize %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-arrows-angle-expand"></i>
      </span>

      <select class="form-select" id="size" name="pet[size]">
        <% sizeOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>
  <!-- Pet coat pattern -->
  <div class="col-md-4">
    <label class="form-label" for="pattern"><%= petsLocale.filterPattern %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-grid-3x3-gap"></i>
      </span>

      <select class="form-select" id="pattern" name="pet[pattern]">
        <% coatPatternOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>

  <!-- Pet coat color1 -->
  <div class="col-md-4">
    <label class="form-label" for="firstcolor"><%= petsLocale.filterMainColor %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-palette"></i>
      </span>
      <select class="form-select" id="firstcolor" form="pet-form" name="pet[firstcolor]">
        <% colorOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
      <!-- <div class="valid-feedback">Looks good!</div> -->
    </div>
  </div>
  <!-- Pet coat color2 -->
  <div class="col-md-4">
    <label class="form-label" id="secondcolorLabel" for="secondcolor"><%= petsLocale.filterSecondColor %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-palette"></i>
      </span>
      <select class="form-select" id="secondcolor" form="pet-form" name="pet[secondcolor]">
        <% colorOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>

  <!-- Pet coat color3 -->
  <div class="col-md-4">
    <label class="form-label" for="thirdcolor"><%= petsLocale.filterThirdColor %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-palette"></i>
      </span>
      <select class="form-select" id="thirdcolor" form="pet-form" name="pet[thirdcolor]">
        <% colorOptions.forEach(option => { %>
        <option value="<%= option.value %>"><%= option.text %></option>
        <% }); %>
      </select>
    </div>
  </div>

  <div class="col-md-4">
    <label class="form-label" for="name"><%= petsLocale.filterName %></label>
    <!-- change name attr to name later -->
    <div class="input-group">
      <span class="input-group-text"><i class="bi bi-chat-dots"></i></span>
      <input name="pet[title]" type="text" class="form-control" id="name" autocomplete="off" />
      <!-- <small class="form-text text-muted"></small> -->
      <!-- <div class="valid-feedback">Looks good!</div> -->
    </div>
  </div>

  <!-- Pet Breed -->
  <div class="col-md-4">
    <label class="form-label"><%= petsLocale.filterBreed %></label>
    <div class="input-group">
      <span class="input-group-text">
        <i class="bi bi-x-diamond-fill"></i>
      </span>
      <select class="form-select" id="petBreed" name="breed">
        <option value="<%= breedsOptions.all[0].value %>"><%= breedsOptions.all[0].text %></option>
        <optgroup label="<%= breedsOptions.catOptiongroupLabel[0].text %>">
          <% breedsOptions.cats.forEach(option => { %>
          <option value="<%= option.value %>"><%= option.text %></option>
          <% }); %>
        </optgroup>
        <optgroup label="<%= breedsOptions.dogOptiongroupLabel[0].text %>">
          <% breedsOptions.dogs.forEach(option => { %>
          <option value="<%= option.value %>"><%= option.text %></option>
          <% }); %>
        </optgroup>
      </select>
    </div>
  </div>

  <!-- <div class="col-md-6 mb-3">
    <label class="form-label" for="coat">Coat type</label>
    <select class="form-select" id="coat" form="pet-form" name="pet[coat]">
   
      <option value="--">--</option>
      <option value="Hairless">Hairless</option>
      <option value="Short">Short-coated</option>
      <option value="Medium">Medium-coated</option>
      <option value="Long">Long-coated</option>
      <option value="Wire">Wire-coated</option>
      <option value="Curly">Curly-coated</option>
    </select>

  </div> -->

  <!-- <div class="col-md-6 mb-3">
    <label class="form-label" for="size">Petâ€™s size</label>
    <select class="form-select" id="size" form="pet-form" name="pet[size]">
   
      <option value="--">--</option>
      <option value="Small">Small</option>
      <option value="Medium">Medium</option>
      <option value="Large">Large</option>
    </select>

  </div> -->

  <!-- <div class="col-md-6 mb-3">
    <label class="form-label" for="age">Age</label>
    <select class="form-select" id="age" form="pet-form" name="pet[age]" disabled>

      <option value="--">--</option>
    </select>
  </div> -->
  <!-- <div class="col-md-6 mb-3">
    <label class="form-label" for="lostdate">Lost Date</label>
    <input class="form-control" type="date" name="pet[lostdate]" min="2023-01-01" />
    <div class="valid-feedback">Looks good!</div>
  </div> -->

  <!-- <div class="col-md-12 mb-3 d-none">
    <label class="form-label" for="petStatus">Status</label>
    <select class="form-select" id="petStatus" form="pet-form" name="pet[petStatus]">
      <option value="Missing" selected>Missing</option>
      <option value="Found" disabled>Found</option>
    </select>
  </div> -->

  <div class="col-md-12 mb-3">
    <label class="form-label" for="description"><%= petsLocale.filterDescription %></label>
    <textarea maxlength="400" style="resize: none; height: 140px" class="form-control txt-area" type="text" id="description" name="pet[description]" placeholder="Max 400 characters" required></textarea>
    <div class="valid-feedback">Looks good!</div>
  </div>

  <div class="col-md-12 mb-3">
    <label for="image" class="form-label"><%= petsLocale.filterUploadImages %></label>
    <input class="form-control" type="file" id="image" name="image" multiple accept="image/png, image/jpeg, image/jpg" />
  </div>
  <div class="mb-2"><a class="btn btn-secondary me-3" href="/pets">Go Back</a><button class="btn btn-success">Add Pet</button></div>
</form>

<div class="alert alert-success d-flex align-items-center" role="alert">
  <svg class="bi flex-shrink-0 me-2" role="img" aria-label="Success:" style="height: 1.5rem; width: 1.5rem" fill="#198754">
    <use xlink:href="#info-fill" />
  </svg>
  <div>NOTE: this will be made public, please do not provide sensitive information that you would like kept private</div>
</div>

<!--hides first option in select-->
<!-- <script>
  var userLat;
  var userLng;
  if ("geolocation" in navigator) {
    /* geolocation is available */

    navigator.geolocation.getCurrentPosition((position) => {
      userLat = position.coords.latitude;

      userLng = position.coords.longitude;
      console.log(userLng);
      console.log(position.coords.latitude, position.coords.longitude);

      var map = L.map("map").setView([userLat, userLng], 13);
      var marker = L.marker([userLat, userLng], { draggable: true }).addTo(map);

      marker.addEventListener("dragend", (e) => {
        selectedPoint = e.target.getLatLng();
        console.log(selectedPoint);

        let inputLat = document.querySelector("#latitude");
        let inputLng = document.querySelector("#longitude");
        inputLat.value = selectedPoint.lat;
        inputLng.value = selectedPoint.lng;
      });

      L.tileLayer(
        "https://{s}.api.tomtom.com/map/1/tile/basic/{style}/{z}/{x}/{y}.{ext}?key=ocXvxDGoMFAuPNAA1lUnaf9nsgT7Evmt",
        {
          maxZoom: 22,
          attribution:
            '<a href="https://tomtom.com" target="_blank">&copy;  1992 - 2023 TomTom.</a> ',
          subdomains: "abcd",
          style: "main",
          ext: "png",
          apikey: "ocXvxDGoMFAuPNAA1lUnaf9nsgT7Evmt",
        }
      ).addTo(map);
      // L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
      //  maxZoom: 19,
      //  attribution:
      //    '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
      //}).addTo(map);
    });
  } else {
    /* geolocation IS NOT available */
    alert("geolocation IS NOT available");
  }
</script> -->

<!-- NOTE: this will be made public, please do not provide sensitive information that you would like kept private -->
<!-- <script>
  document.getElementById('species').selectedIndex = -1;
</script> -->
<!-- <script>
  let selectSpecies = document.querySelector('#species');
  let selectBreed = document.querySelector('#breed');
  let selectAge = document.querySelector('#age');

  let optionBreed;

  let optionAge;

  let dogBreeds = [
    '',
    'Airedale Terrier',
    'Akita',
    'Alaskan Malamute',
    'American Bulldog',
    'American Cocker Spaniel',
    'American Eskimo Dog',
    'American Staffordshire Terrier',
    'Anatolian Shepherd Dog',
    'Australian Cattle Dog',
    'Australian Shepherd',
    'Australian Terrier',
    'Basset Hound',
    'Beagle',
    'Bearded Collie',
    'Beauceron',
    'Bedlington Terrier',
    'Belgian Malinois',
    'Belgian Sheepdog',
    'Belgian Tervuren',
    'Bernese Mountain Dog',
    'Bichon Frise',
    'Black and Tan Coonhound',
    'Black Russian Terrier',
    'Bloodhound',
    'Border Collie',
    'Border Terrier',
    'Boston Terrier',
    'Bouvier des Flandres',
    'Boxer',
    'Briard',
    'Brittany',
    'Brussels Griffon',
    'Bull Terrier',
    'Bulldog',
    'Bullmastiff',
    'Cairn Terrier',
    'Cane Corso',
    'Cardigan Welsh Corgi',
    'Cavalier King Charles Spaniel',
    'Chesapeake Bay Retriever',
    'Chihuahua',
    'Chinese Crested',
    'Chinese Shar-Pei',
    'Chow Chow',
    'Clumber Spaniel',
    'Cocker Spaniel',
    'Collie',
    'Curly-Coated Retriever',
    'Dachshund',
    'Dalmatian',
    'Dandie Dinmont Terrier',
    'Doberman Pinscher',
    'Dogue de Bordeaux',
    'English Bulldog',
    'English Cocker Spaniel',
    'English Foxhound',
    'English Setter',
    'English Springer Spaniel',
    'English Toy Spaniel',
    'Entlebucher Mountain Dog',
    'Field Spaniel',
    'Finnish Lapphund',
    'Finnish Spitz',
    'Flat-Coated Retriever',
    'French Bulldog',
    'German Pinscher',
    'German Shepherd Dog',
    'German Shorthaired Pointer',
    'German Wirehaired Pointer',
    'Giant Schnauzer',
    'Glen of Imaal Terrier',
    'Golden Retriever',
    'Goldendoodle',
    'Gordon Setter',
    'Great Dane',
    'Great Pyrenees',
    'Greater Swiss Mountain Dog',
    'Greyhound',
    'Havanese',
    'Ibizan Hound',
    'Icelandic Sheepdog',
    'Irish Red and White Setter',
    'Irish Setter',
    'Irish Terrier',
    'Irish Water Spaniel',
    'Irish Wolfhound',
    'Italian Greyhound',
    'Jack Russell Terrier',
    'Japanese Chin',
    'Japanese Spitz',
    'Keeshond',
    'Kerry Blue Terrier',
    'Komondor',
    'Kuvasz',
    'Labradoodle',
    'Labrador Retriever',
    'Lakeland Terrier',
    'Lhasa Apso',
    'Maltese',
    'Manchester Terrier',
    'Mastiff',
    'Miniature Bull Terrier',
    'Miniature Pinscher',
    'Miniature Schnauzer',
    'Neapolitan Mastiff',
    'Newfoundland',
    'Norfolk Terrier',
    'Norwegian Buhund',
    'Norwegian Elkhound',
    'Norwegian Lundehund',
    'Norwich Terrier',
    'Nova Scotia Duck Tolling Retriever',
    'Old English Sheepdog',
    'Otterhound',
    'Papillon',
    'Pekingese',
    'Pembroke Welsh Corgi',
    'Petit Basset Griffon Vendeen',
    'Pharaoh Hound',
    'Plott',
    'Pointer',
    'Polish Lowland Sheepdog',
    'Pomeranian',
    'Poodle',
    'Portuguese Water Dog',
    'Pug',
    'Puli',
    'Pumi',
    'Pyrenean Shepherd',
    'Rat Terrier',
    'Redbone Coonhound',
    'Rhodesian Ridgeback',
    'Rottweiler',
    'Saint Bernard',
    'Saluki',
    'Samoyed',
    'Schipperke',
    'Scottish Deerhound',
    'Scottish Terrier',
    'Sealyham Terrier',
    'Shetland Sheepdog',
    'Shiba Inu',
    'Shih Tzu',
    'Siberian Husky',
    'Silky Terrier',
    'Skye Terrier',
    'Sloughi',
    'Small Munsterlander Pointer',
    'Soft-Coated Wheaten Terrier',
    'Spanish Water Dog',
    'Spinone Italiano',
    'Staffordshire Bull Terrier',
    'Standard Schnauzer',
    'Sussex Spaniel',
    'Swedish Vallhund',
    'Tibetan Mastiff',
    'Tibetan Spaniel',
    'Tibetan Terrier',
    'Toy Fox Terrier',
    'Treeing Tennessee Brindle',
    'Treeing Walker Coonhound',
    'Vizsla',
    'Weimaraner',
    'Welsh Springer Spaniel',
    'Welsh Terrier',
    'West Highland White Terrier',
    'Whippet',
    'Wire Fox Terrier',
    'Wirehaired Pointing Griffon',
    'Wirehaired Vizsla',
    'Working Kelpie',
    'Xoloitzcuintli',
    'Yorkshire Terrier',
  ];

  let catBreeds = [
    '',
    'Abyssinian',
    'American Bobtail',
    'American Shorthair',
    'Australian Mist',
    'Balinese',
    'Bengal',
    'Birman',
    'Bombay',
    'British Shorthair',
    'Burmese',
    'Burmilla',
    'Chartreux',
    'Chausie',
    'Cornish Rex',
    'Cymric',
    'Devon Rex',
    'Egyptian Mau',
    'Exotic Shorthair',
    'Himalayan',
    'Highlander',
    'Japanese Bobtail',
    'Korat',
    'LaPerm',
    'Maine Coon',
    'Manx',
    'Munchkin',
    'Nebelung',
    'Norwegian Forest Cat',
    'Oriental Shorthair',
    'Peterbald',
    'Persian',
    'Pixiebob',
    'Ragdoll',
    'Russian Blue',
    'Scottish Fold',
    'Selkirk Rex',
    'Serengeti',
    'Siberian',
    'Siamese',
    'Singapura',
    'Snowshoe',
    'Sokoke',
    'Sphynx',
    'Tonkinese',
    'Toyger',
    'Turkish Angora',
    'Turkish Van',
  ];

  let catAge = ['', 'Kitten', 'Adolescent', 'Adult', 'Senior'];

  let dogAge = ['', 'Puppy', 'Adolescent', 'Adult', 'Senior'];

  selectSpecies.addEventListener('change', (e) => {
    dogBreeds.forEach((breed, index) => {
      selectBreed.remove(optionBreed);
      selectAge.remove(optionAge);
    });
    catBreeds.forEach((breed, index) => {
      selectBreed.remove(optionBreed);
      selectAge.remove(optionAge);
    });
    console.log(e.target.value);
    if (e.target.value === 'Dog') {
      selectBreed.removeAttribute('disabled', true);
      dogBreeds.forEach((breed, index) => {
        optionBreed = document.createElement('option');
        optionBreed.value = optionBreed.text = breed;
        selectBreed.add(optionBreed);
      });

      selectAge.removeAttribute('disabled', true);
      dogAge.forEach((age, index) => {
        optionAge = document.createElement('option');
        optionAge.value = optionAge.text = age;
        selectAge.add(optionAge);
      });
    } else if (e.target.value === 'Cat') {
      selectBreed.removeAttribute('disabled', true);
      catBreeds.forEach((breed, index) => {
        optionBreed = document.createElement('option');
        optionBreed.value = optionBreed.text = breed;
        selectBreed.add(optionBreed);
      });

      selectAge.removeAttribute('disabled', true);
      catAge.forEach((age, index) => {
        optionAge = document.createElement('option');
        optionAge.value = optionAge.text = age;
        selectAge.add(optionAge);
      });
    }
  });
</script>

<script>
  let selectPattern = document.querySelector('#pattern');
  let selectFirstColor = document.querySelector('#firstcolor');
  let selectSecondColor = document.querySelector('#secondcolor');
  let selectThirdColor = document.querySelector('#thirdcolor');
  let colorOption1;
  let colorOption2;
  let colorOption3;

  let secondcolorLabel = document.querySelector('#secondcolorLabel');

  let petColors = ['', 'Black', 'Brown', 'White', 'Red', 'Gold', 'Blue', 'Gray', 'Cream', 'Yellow'];

  selectPattern.addEventListener('change', (e) => {
    petColors.forEach((color, index) => {
      selectFirstColor.remove(colorOption1);
      selectSecondColor.remove(colorOption2);
      selectThirdColor.remove(colorOption3);
    });

    console.log(e.target.value);

    if (e.target.value === 'Monochrome') {
      selectFirstColor.removeAttribute('disabled', true);
      petColors.forEach((color, index) => {
        colorOption1 = document.createElement('option');
        colorOption1.value = colorOption1.text = color;
        selectFirstColor.add(colorOption1);

        colorOption2 = document.createElement('option');
        colorOption2.value = colorOption2.text = '--';
        selectSecondColor.add(colorOption2);
        selectSecondColor.setAttribute('disabled', true);

        colorOption3 = document.createElement('option');
        colorOption3.value = colorOption3.text = '--';
        selectThirdColor.add(colorOption3);
        selectThirdColor.setAttribute('disabled', true);
      });
    } else if (e.target.value === 'Bicolor') {
      selectFirstColor.removeAttribute('disabled', true);
      selectSecondColor.removeAttribute('disabled', true);
      petColors.forEach((color, index) => {
        colorOption1 = document.createElement('option');
        colorOption1.value = colorOption1.text = color;
        selectFirstColor.add(colorOption1);

        secondcolorLabel.textContent = 'Second color';
        colorOption2 = document.createElement('option');
        colorOption2.value = colorOption2.text = color;
        selectSecondColor.add(colorOption2);

        colorOption3 = document.createElement('option');
        colorOption3.value = colorOption3.text = '--';
        selectThirdColor.add(colorOption3);
        selectThirdColor.setAttribute('disabled', true);
      });
    } else if (e.target.value === 'Tricolor') {
      selectFirstColor.removeAttribute('disabled', true);
      selectSecondColor.removeAttribute('disabled', true);
      selectThirdColor.removeAttribute('disabled', true);
      petColors.forEach((color, index) => {
        colorOption1 = document.createElement('option');
        colorOption1.value = colorOption1.text = color;
        selectFirstColor.add(colorOption1);

        secondcolorLabel.textContent = 'Second color';
        colorOption2 = document.createElement('option');
        colorOption2.value = colorOption2.text = color;
        selectSecondColor.add(colorOption2);

        colorOption3 = document.createElement('option');
        colorOption3.value = colorOption3.text = color;
        selectThirdColor.add(colorOption3);
      });
    } else if (e.target.value === 'Pointed') {
      selectFirstColor.removeAttribute('disabled', true);
      selectSecondColor.removeAttribute('disabled', true);

      petColors.forEach((color, index) => {
        colorOption1 = document.createElement('option');
        colorOption1.value = colorOption1.text = color;
        selectFirstColor.add(colorOption1);

        secondcolorLabel.textContent = 'Point color';
        colorOption2 = document.createElement('option');
        colorOption2.value = colorOption2.text = color;
        selectSecondColor.add(colorOption2);

        colorOption3 = document.createElement('option');
        colorOption3.value = colorOption3.text = '--';
        selectThirdColor.add(colorOption3);
        selectThirdColor.setAttribute('disabled', true);
      });
    } else if (e.target.value === 'Spotted') {
      selectFirstColor.removeAttribute('disabled', true);
      selectSecondColor.removeAttribute('disabled', true);
      petColors.forEach((color, index) => {
        colorOption1 = document.createElement('option');
        colorOption1.value = colorOption1.text = color;
        selectFirstColor.add(colorOption1);

        secondcolorLabel.textContent = 'Spot color';
        colorOption2 = document.createElement('option');
        colorOption2.value = colorOption2.text = color;
        selectSecondColor.add(colorOption2);

        colorOption3 = document.createElement('option');
        colorOption3.value = colorOption3.text = '--';
        selectThirdColor.add(colorOption3);
        selectThirdColor.setAttribute('disabled', true);
      });
    } else if (e.target.value === 'Striped') {
      selectFirstColor.removeAttribute('disabled', true);
      selectSecondColor.removeAttribute('disabled', true);
      petColors.forEach((color, index) => {
        colorOption1 = document.createElement('option');
        colorOption1.value = colorOption1.text = color;
        selectFirstColor.add(colorOption1);

        secondcolorLabel.textContent = 'Stripe color';
        colorOption2 = document.createElement('option');
        colorOption2.value = colorOption2.text = color;
        selectSecondColor.add(colorOption2);

        colorOption3 = document.createElement('option');
        colorOption3.value = colorOption3.text = '--';
        selectThirdColor.add(colorOption3);
        selectThirdColor.setAttribute('disabled', true);
      });
    } else if (e.target.value === '-') {
      colorOption1 = document.createElement('option');
      colorOption2 = document.createElement('option');
      colorOption3 = document.createElement('option');

      colorOption1.value = colorOption1.text = '--';
      colorOption2.value = colorOption2.text = '--';
      colorOption3.value = colorOption3.text = '--';

      selectFirstColor.add(colorOption1);
      selectSecondColor.add(colorOption2);
      selectThirdColor.add(colorOption3);

      selectFirstColor.setAttribute('disabled', true);
      selectSecondColor.setAttribute('disabled', true);
      selectThirdColor.setAttribute('disabled', true);
    }
  });
</script> -->

<!-- <script src="/javascripts/draggableMarkerMap.js"></script> -->

<script>
  const TOMTOMTOKEN = '<%-process.env.TOMTOM_API_KEY%>';
</script>
<script src="/javascripts/formMap.js"></script>
