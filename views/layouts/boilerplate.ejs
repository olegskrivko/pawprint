<!DOCTYPE html>
<!-- <html lang="en" data-bs-theme="dark"> -->
<html lang="en" data-bs-theme="light">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin="" />
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script>

    <link rel="stylesheet" type="text/css" href="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.22.1/maps/maps.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous" />

    <script src="https://api.tomtom.com/maps-sdk-for-web/cdn/6.x/6.22.1/maps/maps-web.min.js"></script>
    <!-- <link rel="stylesheet" href="/stylesheets/app.css" /> -->

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <!-- Development version -->
    <link rel="manifest" href="/manifest.json" />

    <title>Animal Search</title>
  </head>
  <body class="d-flex flex-column vh-100">
    <%- include('../partials/navbar') %>
    <main class="container mt-4 mb-4"><%- include('../partials/flash')%> <%- body %></main>
    <%- include('../partials/footer') %>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js" integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous"></script>
    <!-- <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"
      integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V"
      crossorigin="anonymous"
    ></script> -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN" crossorigin="anonymous"></script>
    <!-- <script src="/javascripts/showPageMap.js"></script> -->
    <script src="/javascripts/validateForms.js"></script>
    <script>
      function setTheme(theme) {
        const htmlTag = document.querySelector('html');
        htmlTag.setAttribute('data-bs-theme', theme);
      }

      function handleThemeChange(event) {
        const theme = event.target.value;
        setTheme(theme);

        // Store the theme preference in localStorage
        localStorage.setItem('theme', theme);
      }

      function checkThemePreference() {
        const theme = localStorage.getItem('theme');
        if (theme) {
          setTheme(theme);

          // Set the corresponding radio button as checked
          const radioButton = document.querySelector(`input[value="${theme}"]`);
          if (radioButton) {
            radioButton.checked = true;
          }
        }
      }

      const themeRadioButtons = document.querySelectorAll('input[name="theme"]');
      themeRadioButtons.forEach((radioButton) => {
        radioButton.addEventListener('change', handleThemeChange);
      });

      // Call checkThemePreference on page load
      checkThemePreference();
    </script>
    <!-- FOR PWA -->
    <button id="addToHomeScreenBtn">Add to Home Screen</button>

    <script>
      let deferredPrompt;

      window.addEventListener('beforeinstallprompt', (event) => {
        // Prevent the default prompt
        event.preventDefault();

        // Store the event for later use
        deferredPrompt = event;

        // Show the custom button or any other UI element to trigger the prompt
        const addToHomeScreenBtn = document.getElementById('addToHomeScreenBtn');
        addToHomeScreenBtn.style.display = 'block';

        addToHomeScreenBtn.addEventListener('click', () => {
          // Prompt the user to install the app
          deferredPrompt.prompt();

          // Wait for the user's choice
          deferredPrompt.userChoice.then((choiceResult) => {
            if (choiceResult.outcome === 'accepted') {
              console.log('User accepted the install prompt');
            } else {
              console.log('User dismissed the install prompt');
            }

            // Reset the deferredPrompt variable
            deferredPrompt = null;
          });
        });
      });

      // Hide the custom button if the app is already installed
      window.addEventListener('appinstalled', () => {
        const addToHomeScreenBtn = document.getElementById('addToHomeScreenBtn');
        addToHomeScreenBtn.style.display = 'none';
      });
    </script>

    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker
            .register('/service-worker.js')
            .then((registration) => {
              console.log('Service Worker registered');
            })
            .catch((error) => {
              console.error('Service Worker registration failed:', error);
            });
        });
      }
    </script>
  </body>
</html>
